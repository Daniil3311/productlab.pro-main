worker_processes     auto;

load_module "modules/ngx_http_geoip_module.so";

events {
    worker_connections   1024;
    multi_accept         on;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   10g;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Logging
    log_format json_analytics escape=json '{'
                            '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                            '"connection": "$connection", ' # connection serial number
                            '"connection_requests": "$connection_requests", ' # number of requests made in connection
                    '"pid": "$pid", ' # process pid
                    '"request_id": "$request_id", ' # the unique request id
                    '"request_length": "$request_length", ' # request length (including headers and body)
                    '"remote_addr": "$remote_addr", ' # client IP
                    '"remote_user": "$remote_user", ' # client HTTP username
                    '"remote_port": "$remote_port", ' # client port
                    '"time_local": "$time_local", '
                    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                    '"request": "$request", ' # full path no arguments if the request
                    '"request_uri": "$request_uri", ' # full path and arguments if the request
                    '"args": "$args", ' # args
                    '"status": "$status", ' # response status code
                    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                    '"http_referer": "$http_referer", ' # HTTP referer
                    '"http_user_agent": "$http_user_agent", ' # user agent
                    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                    '"http_host": "$http_host", ' # the request Host: header
                    '"server_name": "$server_name", ' # the name of the vhost serving the request
                    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                    '"scheme": "$scheme", ' # http or https
                    '"request_method": "$request_method", ' # request method
                    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                    '"gzip_ratio": "$gzip_ratio", '
                    '"http_cf_ray": "$http_cf_ray",'
                    '"geoip_country_code": "$geoip_country_code"'
                    '}';

    access_log /var/log/nginx/json_access.log json_analytics;
    error_log              /var/log/nginx/error.log warn;

    geoip_country /etc/nginx/GeoIP.dat;
    geoip_city /etc/nginx/GeoIPCity.dat;

    # Diffie-Hellman parameter for DHE ciphersuites
    # ssl_dhparam            /etc/nginx/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout       2s;

    upstream backend {
        server backend:5001;
    }

    upstream adminer {
        server adminer:8080;
    }

    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name promo.productlab.pro www.promo.productlab.pro;

        # SSL
        ssl_session_timeout    1d;
        ssl_session_cache      shared:SSL:10m;
        ssl_session_tickets    off;
        
        ssl_certificate /etc/letsencrypt/live/promo.productlab.pro/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/promo.productlab.pro/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/promo.productlab.pro/chain.pem;

        location / {
            root /var/www/;
            index index.html index.htm;
            limit_except GET HEAD OPTIONS { deny all; }
            try_files $uri /index.html;
        }

        location /api {
            rewrite /api/(.*)  /$1  break;
            proxy_pass http://backend;
            include proxy_params;
        }

        location /api/files/upload {
            client_max_body_size 10g;

            proxy_connect_timeout 1h;
            proxy_send_timeout 1h;
            proxy_read_timeout 1h;

            rewrite /api/(.*)  /$1  break;
            proxy_pass http://backend;

            include proxy_params;
        }

        location /adminer {
            proxy_pass http://adminer; 
            include proxy_params;
        }
        

        location /storage {
            # rewrite /storage/(.*)  /storage/$1  break;
            proxy_pass http://backend$request_uri;
            proxy_pass_header Content-Type;
            include proxy_params;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            rewrite  ^/prometheus/(.*)  /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /loki/ {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/htpasswd;


            proxy_pass http://loki:3100/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws/ {
            proxy_pass http://backend$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    server {
        listen      80;
        listen      [::]:80;
        server_name promo.productlab.pro www.promo.productlab.pro;

        location / {
            return 301 https://promo.productlab.pro$request_uri;
        }
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;

        server_tokens off;

        # SSL
        ssl_session_timeout    1d;
        ssl_session_cache      shared:SSL:10m;
        ssl_session_tickets    off;
        
        ssl_certificate /etc/letsencrypt/live/productlab.pro/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/productlab.pro/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/productlab.pro/chain.pem;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        server_name productlab.pro www.productlab.pro;

        gzip on;
        gzip_proxied any;
        gzip_comp_level 4;
        gzip_types text/css application/javascript image/svg+xml;

        location /_next/static {
            proxy_cache STATIC;
            proxy_pass http://nextjs:3000;

            # For testing cache - remove before deploying to production
        }

        location /static {
            proxy_cache STATIC;
            proxy_ignore_headers Cache-Control;
            proxy_cache_valid 60m;
            proxy_pass http://nextjs:3000;

            # For testing cache - remove before deploying to production
            # add_header X-Cache-Status $upstream_cache_status;
        }

        location / {
            proxy_pass http://nextjs:3000;
        }
    }



    server {
        listen           80;
        listen      [::]:80;

        server_name productlab.pro www.productlab.pro;
        server_tokens off;

        location / {
            return 301 https://productlab.pro$request_uri;
        }
    }
}
